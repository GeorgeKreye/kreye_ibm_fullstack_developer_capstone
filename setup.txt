START IBM CODE ENGINE BEFORE RUNNING

git clone https://github.com/GeorgeKreye/kreye_ibm_fullstack_developer_capstone.git
cd kreye_ibm_fullstack_developer_capstone/server/
pip install virtualenv
virtualenv djangoenv
source djangoenv/bin/activate
python3 -m pip install -U -r requirements.txt

SEPERATE TERMINAL:
cd kreye_ibm_fullstack_developer_capstone/server/database
docker build . -t nodeapp
docker-compose up
FIND ENDPOINT VIA LAUNCH FUNCTION & REPLACE DJANGOAPP .env URL, ADD SLASH AT END

SEPARATE TERMINAL:
cd kreye_ibm_fullstack_developer_capstone/server/carsInventory
docker build . -t nodeapp
docker-compose up
FIND ENDPOINT VIA LAUNCH FUNCTION & REPLACE DJANGOAPP .env URL, ADD SLASH AT END

IBM CODE ENGINE TERMINAL:
cd kreye_ibm_fullstack_developer_capstone/server/djangoapp/microservices
docker build . -t us.icr.io/${SN_ICR_NAMESPACE}/senti_analyzer
docker push us.icr.io/${SN_ICR_NAMESPACE}/senti_analyzer
ibmcloud ce application create --name sentianalyzer --image us.icr.io/${SN_ICR_NAMESPACE}/senti_analyzer --registry-secret icr-secret --port 5000
REPLACE DJANGOAPP .env URL, ADD SLASH AT END

FIRST TERMINAL, AFTER REPLACING:
python3 manage.py makemigrations
python3 manage.py migrate --run-syncdb
cd frontend
npm install
npm run build
cd ..
python3 manage.py createsuperuser
MY_NAMESPACE=$(ibmcloud cr namespaces | grep sn-labs-)
docker build -t us.icr.io/$MY_NAMESPACE/dealership .
docker push us.icr.io/$MY_NAMESPACE/dealership
kubectl apply -f deployment.yaml

WAIT A BIT BEFORE RUNNING:
kubectl port-forward deployment.apps/dealership 8000:8000

TO RESTART SERVER AFTER FRONTEND MODIFICATION:
python3 manage.py makemigrations
python3 manage.py migrate --run-syncdb
cd frontend
npm run build
cd ..
docker build -t us.icr.io/$MY_NAMESPACE/dealership .
docker push us.icr.io/$MY_NAMESPACE/dealership
kubectl apply -f deployment.yaml
